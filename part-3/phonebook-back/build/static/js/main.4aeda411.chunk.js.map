{"version":3,"sources":["Form.tsx","Search.tsx","Numbers.tsx","Server.tsx","Notification.tsx","App.tsx","index.tsx"],"names":["Form","update","persons","setNotif","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","person","id","name","number","p","type","msg","find","x","checkValidity","value","onChange","target","align","Search","setValue","Numbers","search","del","filter","toLowerCase","includes","map","style","margin","onClick","baseUrl","a","axios","post","then","data","delete","get","put","ex","Add","Delete","All","Replace","error","success","Success","message","Error","Display","alert","App","defaultError","setPersons","setSearch","notification","setTimeout","useEffect","Server","Notification","found","window","confirm","catch","toString","response","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4aeda411.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Form({ update, persons, setNotif }: { persons: Person[], update: (value: Person) => void, setNotif: (alert: Alert) => void; }) {\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const submit = (event: any) => {\n    event.preventDefault();\n    const person: Person = { id: '', name: newName, number: newNumber };\n\n    if (checkValidity(person, persons, setNotif))\n      update(person);\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <table>\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td><input value={newName} onChange={event => setNewName(event.target.value)} /></td>\n            </tr>\n            <tr>\n              <td>Number</td>\n              <td><input value={newNumber} onChange={event => setNewNumber(event.target.value)} /></td>\n            </tr>\n            <tr>\n              <td></td>\n              <td align='right'><button type='submit'>Add</button></td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n}\n\nfunction checkValidity(p: Person, persons: Person[], setNotif: (alert: Alert) => void) {\n  if (p.name === '' || p.number === '') {\n    setNotif({ type: 'error', msg: 'Blanks are not allowed' });\n    return false;\n  }\n  \n  if (persons.find(x => x.number === p.number)) {\n    setNotif({ type: 'error', msg: `Number '${p.number}' already exists in the phonebook` });\n    return false;\n  }\n\n  return true;\n};\n\nexport default Form;","import React, { useState } from 'react';\n\nfunction Search({ update }: { update: (s: string) => void; }) {\n  const [value, setValue] = useState('');\n  const submit = (event: any) => {\n    event.preventDefault();\n    update(value);\n    setValue('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        Search by name <input value={value} onChange={event => setValue(event.target.value)} />\n        <button type='submit'>Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;","import React from 'react';\n\nfunction Numbers({ persons, search, del }: { persons: Person[], search: string, del: (person: Person) => void; }) {\n  const filter = (x: Person) => x.name.toLowerCase().includes(search.toLowerCase());\n  const mapper = (x: Person) => (\n    <p style={{ margin: 0 }} key={x.name}>\n      {x.name} {x.number} <button onClick={() => del(x)}>delete</button>\n    </p>\n  );\n\n  return (\n    <div>\n      {persons.filter(filter).map(mapper)}\n    </div>\n  );\n}\n\nexport default Numbers;","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nasync function Add(person: Person) {\n  return axios.post(baseUrl, person).then(x => x.data);\n}\n\nasync function Delete(id: string) {\n  return axios.delete(baseUrl + '/' + id);\n}\n\nasync function All() {\n  return axios.get(baseUrl).then(x => x.data);\n}\n\nasync function Replace(person: Person) {\n  return axios.put(baseUrl + '/' + person.id, person);\n}\n\nconst ex = { Add, Delete, All, Replace };\nexport default ex;","import React from 'react';\n\nconst error: React.CSSProperties = {\n  'color': 'red',\n  'background': 'lightgrey',\n  'fontSize': '20px',\n  'borderStyle': 'solid',\n  'borderRadius': '5px',\n  'padding': '10px',\n  'marginBottom': '10px'\n};\n\nconst success: React.CSSProperties = {\n  'color': 'green',\n  'background': 'lightgrey',\n  'fontSize': '20px',\n  'borderStyle': 'solid',\n  'borderRadius': '5px',\n  'padding': '10px',\n  'marginBottom': '10px'\n};\n\nfunction Display(alert: Alert) {\n  return alert.type === 'success' ? Success(alert.msg) : Error(alert.msg);\n}\n\nfunction Success(message: string) {\n  return <p style={success}>{message}</p>;\n}\n\nfunction Error(message: string) {\n  return <p style={error}>{message}</p>;\n}\n\nconst ex = { Display, Success, Error };\nexport default ex;","import React, { useEffect, useState } from 'react';\nimport Form from './Form';\nimport Search from './Search';\nimport Numbers from './Numbers';\nimport Server from './Server';\nimport Notification from './Notification';\n\nconst alertTimeout = 5000;\n\nfunction App() {\n  const init: Person[] = [];\n  const defaultError: Alert = { type: 'success', msg: '' };\n  const [persons, setPersons] = useState(init);\n  const [search, setSearch] = useState('');\n  const [notification, setNotif] = useState(defaultError);\n\n  const del = (person: Person) => {\n    if (!window.confirm('Delete ' + persons.find(x => x.id === person.id)?.name))\n      return;\n    Server.Delete(person.id).then(() => setPersons(persons.filter(x => x.id !== person.id)))\n      .catch(error => {\n        setNotif({ type: 'error', msg: error.toString() });\n        Server.All().then(x => setPersons(x));\n      });\n  };\n\n  const update = (person: Person) => {\n    let found = persons.find(x => x.name === person.name);\n\n    if (!found) {\n      Server.Add(person).then(x => {\n        setPersons([...persons, x]);\n        setNotif({ type: 'success', msg: 'Added ' + person.name + ' succesfully' });\n        Server.All().then(x => setPersons(x));\n      }).catch(error => {\n        setNotif({ type: 'error', msg: error.response.data });\n        console.log(error.response.data);\n      });\n      return;\n    }\n\n    if (!window.confirm(person.name + ' already exists, replace the old number?'))\n      return;\n    let p: Person = found;\n    p.number = person.number;\n    \n    Server.Replace(found).then(() => {\n      setPersons(persons.map(x => x.id !== p.id ? x : p));\n      setNotif({ type: 'success', msg: 'Modified ' + person.name + ' succesfully' });\n    }).catch(error => {\n      setNotif({ type: 'error', msg: error.toString() });\n      Server.All().then(x => setPersons(x));\n    });\n  };\n\n  if (notification.msg !== '') {\n    setTimeout(() => {\n      setNotif(defaultError);\n    }, alertTimeout);\n  }\n\n  useEffect(() => {\n    Server.All().then(x => setPersons(x));\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search update={x => setSearch(x)} />\n      <h3>Add a new number</h3>\n      {notification.msg !== '' ? Notification.Display(notification) : ''}\n      <Form update={update} persons={persons} setNotif={setNotif} />\n      <h3>Numbers</h3>\n      <Numbers persons={persons} search={search} del={del} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}